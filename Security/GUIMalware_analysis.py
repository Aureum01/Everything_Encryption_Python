# Import the necessary libraries
import tensorflow as tf
from tensorflow.keras import layers
import time
from tkinter import *

# Build the neural network model
model = tf.keras.Sequential()
model.add(layers.Dense(128, input_dim=1024, activation='relu'))
model.add(layers.Dense(64, activation='relu'))
model.add(layers.Dense(1, activation='sigmoid'))

# Compile the model
model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])

# Create a Tkinter window
window = Tk()
window.title("Malware Detector")

# Create a label to show the current status of the program
status_label = Label(window, text="Training model...")
status_label.pack()

# Train the model in the background
def train_model():
  model.fit(X_train, y_train, epochs=10, batch_size=64)
  status_label.config(text="Evaluating model...")
  model.evaluate(X_test, y_test)
  status_label.config(text="Analyzing files...")
  predictions = model.predict(X_new)

  # Count the number of suspicious files
  num_suspicious = 0
  for i in range(len(predictions)):
    if predictions[i] > 0.5:
      num_suspicious += 1

  # Update the status label with the results
  if num_suspicious > 0:
    status_label.config(text="{} suspicious files found.".format(num_suspicious))
  else:
    status_label.config(text="No malware spotted.")

# Start training the model in the background
window.after(0, train_model)

# Run the Tkinter event loop
window.mainloop()
